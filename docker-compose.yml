
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - '22181:22181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql:
    image: mysql:8.0.36
    container_name: mysql-8.0.36
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=booking_db
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      -  ./initdb.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - default
  redis:
    image: redis/redis-stack-server:latest
    container_name: redis-stack-server-v2
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - default
  booking-back-end-service:
    container_name: booking-back-end-service
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - prod.env
    ports:
      - "8081:8081"
    volumes:
      - ./upload:/app/upload
    networks:
      - default
    depends_on:
      - mysql
      - redis
networks:
  default:
    name: booking-back-end-service
volumes:
    mysql_data: